set ratios 1:2:3
set cleaner ~/.config/lf/cleaner
set previewer ~/.config/lf/preview
set preview true
set hidden true
set drawbox true
set icons true
set ignorecase true

# Bookmarks
map `h cd ~
map `w cd /srv/http
map `W cd ~/wallpapers
map `d cd ~/Downloads
map `S cd ~/Desktop
map `c cd ~/.config
map `m cd ~/MAIN

cmd q quit
map <a-q> quit

# Custom Functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        *) xdg-open "$f" ;;
    esac
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo mkdir $ans
}}


cmd dragon %dragon-drag-and-drop -a -x "$fx"
cmd dragon-stay %dragon-drag-and-drop -a "$fx"
cmd dragon-individual %dragon-drag-and-drop "$fx"

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Trash cli bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    # extract the substring from start of string up to delimiter.
    # this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    # if there's only one element left, set `files` to an empty string.
    # this causes us to exit this `while` loop.
    # else, we delete the first "element" of the string from files, and move onto the next.
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

cmd stripspace %stripspace "$f"

cmd link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map e
map R

# File Openers
map ee $$EDITOR "$f"

# Archive Mappings
map az zip
map at tar
map ag targz
map ab targz
map au unarchive

# Trash Mappings
map x trash
map tc clear_trash
map tr restore_trash

# Dragon Mapping
map Dr dragon
map Ds dragon-stay
map Di dragon-individual

map ss stripspace

# Basic Functions
map . set hidden!
map X delete
map p paste
map d cut
map y copy
map <enter> open
map A push %mkdir<space>
map a push %touch<space>
map <c-A> sudomkdir
map <c-a> sudomkfile
map ch chmod
map r rename
map R $vimv $fx
map H top
map L bottom
map c clear
map u unselect
map P :link

cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ]; then
        cmd="cd"
    else 
        cmd="select"
    fi
    lf -remote "send $id $cmd \"$res\""
}}

map F :fzf_jump
